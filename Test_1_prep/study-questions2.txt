CS 4310 study questions/topics
  
Slides IV
- Give a general outline of the greedy meta-algorithm.
- What is a greedy algo in general (what does it do)?
  Define: objective function, constraint, feasible sol., optimal sol.
- Define the greedy knapsack problem.
- Solve a greedy knapsack problem.
- Give greedy knapsack algo. pseudocode.
  What is its complexity?
- Define the optimal merge pattern problem.
  What quantity is optimized? Define.
- Define the weighted external path length.
- Solve an optimal merge pattern problem.
- Give an algorithm for the optimal merge pattern problem (pseudocode).
  Discuss its complexity (using a heap or linked list).
- Define the Huffman tree problem.
  What quantity is optimized? Define.
- Solve a Huffman tree problem.
- Give an algorithm for the Huffman tree problem (pseudocode).
  Discuss its complexity (using a heap or linked list).
- All graphs terminology.
- Give two graph representations.
  Discuss the space they need.
- What is a spanning tree of an undirected graph?
- What is a min. cost spanning tree of an undirected graph?
- Solve a min. cost spanning tree problem
  . using Kruskal's algo
  . using Prim's algo
- Give a high-level representation of Kruskal's algo.
- Discuss its complexity.
- Give pseudocode + complexity of heapify() for building heap.
- Give a detailed representation of Kruskal's algo using union-find.
- All union-find def.
- Outline union-find representation, apply to example.
- Outline simple union and simple find procedures (pseudocode).
- Discuss/show inefficiency of using simple union and simple find.
- Outline weighted union and collapsing find procedures (pseudocode).
- State lemma regarding tree depth and prove lemma
- Kruskal's algo. complexity using heap, and using union-find for
  detecting cycles.
  

- 
